.TH "DRUMGIZMO" "1" "21 July 2018" "drumgizmo" ""

.SH NAME
drumgizmo \- drum application

.SH SYNOPSIS
\fBdrumgizmo\fR [\fIOPTIONS\fR] <\fIFILE\fR>

.SH "DESCRIPTION"
.PP
\fBDrumGizmo\fR is an open source cross-platform drum plugin and stand-alone application. It is comparable to several commercial drum plugin products.
.PP
DrumGizmo uses an open drumkit file format, allowing the community to create their own drumkits. It has multichannel output, making it possible to mix it just the way you would a real drumkit. The optional built-in humanizer analyzes the midi notes, adjusting velocities on-the-fly. This client can be a stand-alone midi renderer, generating .wav files, 1 for each channel. Or use DrumGizmo as a software sampler for an electronic drumkit. There are also plugin versions available.

.SH "OPTIONS"
.PD 0
.RE
\fB-a, --async_load\fR
.RS 7
Load kit in the background.

.RE
\fB-b, --bleed\fR
.RS 7
Set and enable master bleed.

.RE
\fB-i, --inputengine \fR{dummy|test|jackmidi|midifile}
.RS 7
Use said event input engine.

.RE
\fB-I, --inputparms parmlist\fR
.RS 7
Set input engine parameters.

\fBjackmidi:\fR
.P
midimap=<midimapfile>

\fBmidifile:\fR
.P
file=<midifile>
.P
speed=<tempo> (default 1.0)
.P
track=<miditrack> (default -1, all tracks)
.P
midimap=<midimapfile>
.P
loop=<true|false>

\fBossmidi:\fR
.P
midimap=<midimapfile>
.P
dev=<device> (default '/dev/midi')

\fBtest:\fR
.P
p=<hit_propability> (default 0.1)
.P
instr=<instrument> (default -1, random instrument)
.P
len=<seconds> (default -1, forever)

\fBdummy:\fR

.RE
\fB-o, --outputengine \fR{dummy|alsa|jackaudio|wavfile|oss}
.RS 7
Use said audio output engine.

.RE
\fB-O, --outputparms parmlist\fR
.RS 7
Set output engine parameters.

\fBalsa:\fR
.P
dev=<device> (default 'default')
.P
frames=<frames> (default 32)
.P
srate=<samplerate> (default 44100)

\fBwavfile:\fR
.P
file=<filename> (default 'output')
.P
srate=<samplerate> (default 44100)

\fBoss:\fR
.P
dev=<device> (default /dev/dsp)
.P
srate=<samplerate> (default 44100)
.P
max_fragments=<fragments> (default 4)
.P
fragment_size=<size> (default 8)

.P
More info on \fBmax_fragments\fR and \fBfragment_size\fR on
http://manuals.opensound.com/developer/SNDCTL_DSP_SETFRAGMENT.html

\fBjackaudio:\fR

\fBdummy:\fR

.RE
\fB-e, --endpos\fR
.RS 7
Number of samples to process, (default -1: infinite)

.RE
\fB-r, --no-resampling\fR
.RS 7
Disable resampling

.RE
\fB-s, --streaming\fR
.RS 7
Enable diskstreaming

.RE
\fB-S, --strimingparms parmlist\fR
.RS 7
Parameters for controlling the streaming buffers.

.P
\fBlimit\fR=<size> (Limit the amount of preloaded drumkit data to the size)
\" .P
\" \fBchunk_size\fR=<size> (chunk size in k,M,G)

.RE
\fB-t, --timing-humanizer\fR
.RS 7
Enable moving of notes in time.
.P
\fINote: \fIadds \fIlatency \fIto \fIthe \fIoutput \fIso \fIdo \fInot
\fIuse \fIthis \fIwith \fIa \fIreal-time \fImidi \fIdrumkit.

.RE
\fB-T, --timing-humanizerparms parmlist\fR
.RS 7
Timing humanizer options.

.P
\fBlaidback\fR=<val> (Move notes ahead or behind in time in ms
[+/-100].)
.P
\fBtightness\fR=<val> (Control the tightness of the drummer. [0,1].)
.P
\fBregain\fR=<val> (Control how fast the drummer catches up the timing. [0,1])

.RE
\fB-t, --velocity-humanizer\fR
.RS 7
Enables adapting input velocities to make it sound more realistic.

.RE
\fB-T, --velocity-humanizerparms parmlist\fR
.RS 7
Velocity humanizer options.

.P
\fBattack\fR=<val> (How quickly the velocity gets reduced when playing fast notes.
Lower values result in faster velocity reduction. [0,1])
.P
\fBrelease\fR=<val> (How quickly the drummer regains the velocity
when there are spaces between the notes. Lower values result in faster regain. [0,1])
.P
\fBstddev\fR=<val> (The standard-deviation for the velocity humanizer.
Higher value makes it more likely that a sample further
away from the input velocity will be played. [0,4.5])

.RE
\fB-l, --voice-limit\fR
.RS 7
Enable voice limit.

.RE
\fB-L, --voice-limitparms parmlist\fR
.RS 7
Voice limit options.

.P
\fBmax\fR=<val> (Maximum number of voices for each instrument before
old samples are ramped down. [1,30])
.P
\fBrampdown\fR=<val> (Time it takes for an old sample to completely fall
silent. [0.01,2.0])

.RE
\fB-p, --parameters parmlist\fR
.RS 7
Parameters for the sample selection algorithm.
.P
\fBclose\fR=<val> (The importance given to choosing a sample close to
the actual velocity value (after humanization) [0,1])
.P
\fBdiverse\fR=<val> (The importance given to choosing samples which
haven't been played recently [0,1])
.P
\fBrandom\fR=<val> (The amount of randomness added [0,1])

.RE
\fB-v, --version\fR
.RS 7
Print drumgizmo version and exit.

.RE
\fB-h, --help\fR
.RS 7
Print command line help and exit.

.RE
\fBdrumkitfile\fR
.RS 7
Load the drumkitfile.

.RE
.SH "EXAMPLES"
\fBRender midifile to wav files:\fR
.RS 7
drumgizmo -i midifile -I file=file.mid,midimap=midimap.xml -o wavfile -O file=prefix drumkit.xml
.RE
\fBReceive midi from Jack and send audio output to speakers:\fR
.RS 7
drumgizmo -i jackmidi -I midimap=midimap.xml -o jackaudio drumkit.xml
.RE
.SH "BUGS"
Report bugs to http://www.drumgizmo.org/wiki/doku.php?id=bugs.

.SH "ADDITIONAL INFORMATION"
For further information, visit the website http://www.drumgizmo.org.
